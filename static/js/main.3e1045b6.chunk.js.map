{"version":3,"sources":["utils/store.jsx","utils/fetchUsers.js","component/routes.jsx","img/404.jpg","component/Error.jsx","index.js","utils/history.js","component/Spinner.jsx"],"names":["store","observable","mode","setMode","action","val","open","setModalOpen","setModalClose","toggleModal","showForm","toggleForm","isSignedIn","toggleSgn","nb","inc","welcome","setMsg","users","addUser","data","push","addUsers","emails","Array","from","email","newdata","filter","user","includes","length","getUserEmail","idx","getUserByEmail","result","forEach","current","setCurrent","rmCurrent","u","token","setToken","fetchUsers","a","requests","map","page","fetch","Promise","all","response","r","json","flatMap","spin","Spinner","LazyLayout","lazy","LazyHome","LazyAbout","LazySignInForm","LazyNewUsersForm","LazyUser","LazyContacts","routes","path","next","component","fallback","children","process","then","mobxAction","res","context","params","Error","src","img404","alt","style","height","width","loading","configure","enforceActions","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","disableErrorBoundaries","anchor","document","getElementById","router","UniversalRouter","renderRoute","location","resolve","pathname","redirect","history","render","listen","createBrowserHistory","memo","className","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy"],"mappings":"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","file":"static/js/main.3e1045b6.chunk.js","sourcesContent":["import { action, observable } from \"mobx\";\n\nconst store = observable({\n  mode: \"CTO\",\n  setMode: action((val) => (store.mode = val)),\n  // modal version\n  open: false,\n  setModalOpen: action(function setOpen() {\n    store.open = true;\n  }),\n  setModalClose: action(function setLodalClose() {\n    store.open = false;\n  }),\n  toggleModal: action(function toggleModal() {\n    return (store.open = !store.open);\n  }),\n  //\n  showForm: false,\n  toggleForm: action(function toggleForm() {\n    return (store.showForm = !store.showForm);\n  }),\n  //\n  isSignedIn: false,\n  toggleSgn: action(function toggleSgn() {\n    return (store.isSignedIn = !store.isSignedIn);\n  }),\n  get setSignedIn() {\n    return store.isSignedIn ? \"Sign out\" : \"Sign in\";\n  },\n  //\n  nb: 0,\n  inc: action(function inc() {\n    return store.nb++;\n  }),\n  //\n  welcome: \"Please sign in\",\n  get setWelcome() {\n    return store.isSignedIn ? \"Welcome back\" : \"Please sign in\";\n  },\n  setMsg: action(function setMsg() {\n    return (store.welcome = store.isSignedIn\n      ? \"Welcome back\"\n      : \"Please sign in\");\n  }),\n  //\n  users: [],\n  addUser: action(function addUser(data) {\n    store.users.push(data);\n  }),\n  addUsers: action((data) => {\n    const emails = Array.from(store.users, ({ email }) => email);\n    const newdata = data.filter((user) => !emails.includes(user.email));\n    return (store.users = [...store.users, ...newdata]); // concate 2 arrays -> 2 spread\n  }),\n  get nbUsers() {\n    return store.users.length;\n  },\n  getUserEmail: function (idx) {\n    if (store.users.length > 0) return store.users[idx].email;\n  },\n  getUserByEmail: function (email) {\n    let result;\n    store.users.forEach((user) => {\n      if (user.email === email) result = user;\n    });\n    return result;\n  },\n  //\n  current: {},\n  setCurrent: action((data) => {\n    store.current = data;\n  }),\n  rmCurrent: action(function rmUser(user) {\n    store.users = store.users.filter((u) => u.email !== user.email);\n    store.current = {};\n  }),\n  //\n  token: \"\",\n  setToken: action(function ({ token }) {\n    store.token = token;\n  }),\n});\n\nexport default store;\n","export default async function fetchUsers() {\n  // const urlApi1 = \"https://jsonplaceholder.typicode.com/users\";\n  // const resp = await fetch(urlApi1);\n  // return await resp.json();\n\n  const urlApi2 = \"https://reqres.in/api/users\";\n  const requests = [1, 2].map((page) => fetch(`${urlApi2}?page=${page}`));\n  const response = await Promise.all(requests);\n  const users = await Promise.all(response.map((r) => r.json()));\n  return users.flatMap((u) => u.data);\n}\n","import React, { Suspense, lazy } from \"react\";\nimport { action as mobxAction } from \"mobx\";\nimport fetchUsers from \"../utils/fetchUsers\";\n\nimport Spinner from \"./Spinner\";\nconst spin = () => <Spinner />;\n\nconst LazyLayout = lazy(() => import(\"./Layout\"));\nconst LazyHome = lazy(() => import(\"./Home\"));\nconst LazyAbout = lazy(() => import(\"./About\"));\nconst LazySignInForm = lazy(() => import(\"./SignInForm\"));\nconst LazyNewUsersForm = lazy(() => import(\"./NewUsersForm\"));\nconst LazyUser = lazy(() => import(\"./User\"));\nconst LazyContacts = lazy(() => import(\"./Contacts\"));\n\n/* \nin \"index.js\", the Mobx store object is declared and passed to the \n\"new UniversalRouter(routes, {context})\"  via the object \"context={store:store}\"\nHere is the skeleton of \"routes\" waiting for the context to be declared (or not)\n*/\n\n/*\nexport const routes = [\n  {\n    path: \"/\",\n    action: async ({ store, mode }) => {\n      return (\n        <Suspense fallback={<Spinner />}>\n          <LazyLayout store={store}>\n            <LazyHome store={store} mode={mode} />;\n          </LazyLayout>\n        </Suspense>\n      );\n    },\n  },\n  {\n    path: \"/about\",\n    async action({ store }) {\n      return (\n        <Suspense fallback={spin()}>\n          <LazyLayout store={store}>\n            <LazyAbout store={store} />\n          </LazyLayout>\n        </Suspense>\n      );\n    },\n  },\n  {\n    path: \"/signinform\",\n    async action({ store }) {\n      return (\n        <Suspense fallback={spin()}>\n          <LazyLayout store={store}>\n            <LazySignInForm store={store} />\n          </LazyLayout>\n        </Suspense>\n      );\n    },\n  },\n  {\n    path: \"/addusers\",\n    async action({ store, mode }) {\n      // if (mode !== process.env.REACT_APP_MODE) {\n      if (mode !== \"admin\") {\n        return { redirect: \"/about\" };\n      }\n      return (\n        <Suspense fallback={spin()}>\n          <LazyLayout store={store}>\n            <LazyNewUsersForm store={store} />\n          </LazyLayout>\n        </Suspense>\n      );\n    },\n  },\n  {\n    path: \"/contacts\",\n    children: [\n      {\n        path: \"\",\n        async action({ store }) {\n          fetchUsers().then(mobxAction((res) => store.addUsers(res)));\n          return (\n            <Suspense fallback={spin()}>\n              <LazyContacts store={store} />;\n            </Suspense>\n          );\n        },\n      },\n      {\n        path: \"/:email\",\n        async action(context) {\n          // <=> ({ store,mode }, { email }) instead of context\n          // where \"const email = context.params.email\" // cf UR docs\n          return (\n            <Suspense fallback={spin()}>\n              <LazyUser\n                email={context.params.email}\n                store={context.store}\n                mode={context.mode}\n              />\n              ;\n            </Suspense>\n          );\n        },\n      },\n    ],\n  },\n];\n*/\n\nexport const routes = [\n  {\n    path: \"\",\n    async action({ store, next }) {\n      const component = await next();\n      return (\n        component && (\n          <Suspense fallback={<Spinner />}>\n            <LazyLayout store={store}>{component}</LazyLayout>\n          </Suspense>\n        )\n      );\n    },\n    children: [\n      {\n        path: \"/\",\n        action: async ({ store, mode }) => {\n          return (\n            <Suspense fallback={spin()}>\n              <LazyHome store={store} mode={mode} />;\n            </Suspense>\n          );\n        },\n      },\n      {\n        path: \"/about\",\n        async action({ store }) {\n          return (\n            <Suspense fallback={spin()}>\n              <LazyAbout store={store} />;\n            </Suspense>\n          );\n        },\n      },\n      {\n        path: \"/signinform\",\n        async action({ store }) {\n          return (\n            <Suspense fallback={spin()}>\n              <LazySignInForm store={store} />;\n            </Suspense>\n          );\n        },\n      },\n      {\n        path: \"/addusers\",\n        async action({ store, mode }) {\n          if (mode !== process.env.REACT_APP_MODE) {\n            // return { redirect: \"/\"} <- bug?\n            return (\n              <Suspense fallback={spin()}>\n                <LazyHome store={store} mode={mode} />;\n              </Suspense>\n            );\n          }\n          return (\n            <Suspense fallback={spin()}>\n              <LazyNewUsersForm store={store} />\n            </Suspense>\n          );\n        },\n      },\n      {\n        path: \"/contacts\",\n        children: [\n          {\n            path: \"\",\n            async action({ store }) {\n              fetchUsers().then(mobxAction((res) => store.addUsers(res)));\n              return (\n                <Suspense fallback={spin()}>\n                  <LazyContacts store={store} />;\n                </Suspense>\n              );\n            },\n          },\n          {\n            path: \"/:email\",\n            async action(context) {\n              // <=> ({ store,mode }, { email }) instead of context\n              // where \"const email = context.params.email\" // cf UR docs\n              return (\n                <Suspense fallback={spin()}>\n                  <LazyUser\n                    email={context.params.email}\n                    store={context.store}\n                    mode={context.mode}\n                  />\n                  ;\n                </Suspense>\n              );\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n","export default __webpack_public_path__ + \"static/media/404.8b1d91e2.jpg\";","import React, { lazy, Suspense } from \"react\";\n\nimport img404 from \"../img/404.jpg\";\nimport Spinner from \"./Spinner\";\nconst LazyLayout = lazy(() => import(\"./Layout\"));\n\nexport default function Error() {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <LazyLayout>\n        <img\n          src={img404}\n          alt=\"error 404\"\n          style={{ height: \"100vh\", width: \"100vw\" }}\n          loading=\"lazy\"\n        />\n      </LazyLayout>\n    </Suspense>\n  );\n}\n","import { render } from \"react-dom\";\n// import React from \"react\";\nimport UniversalRouter from \"universal-router\";\n// or cdn <=> window.UniversalRouter: to test\n\nimport history from \"./utils/history\";\nimport { routes } from \"./component/routes\";\nimport store from \"./utils/store\";\n\nimport { configure } from \"mobx\";\n\nimport Error from \"./component/Error\";\n// import { RedeemRounded } from \"@material-ui/icons\";\n\n// <-  Mobx debug config\nconfigure({\n  enforceActions: \"always\",\n  computedRequiresReaction: true,\n  reactionRequiresObservable: true,\n  observableRequiresReaction: true,\n  disableErrorBoundaries: true,\n});\n// -< Mobx debug config\n\nconst anchor = document.getElementById(\"root\");\n\nconst context = {\n  mode: \"admin\", //process.env.REACT_APP_MODE= \"admin\" in \"routes.js\"\n  store,\n};\n\nconst router = new UniversalRouter(routes, { context });\n\nasync function renderRoute(location) {\n  try {\n    const page = await router.resolve({ pathname: location.pathname });\n    // console.log(Object.keys(page));\n    if (page.redirect) {\n      return history.push({ pathname: page.redirect });\n    }\n    return render(page, anchor);\n  } catch (err) {\n    render(<Error />, anchor);\n  }\n}\n\nfunction startApp() {\n  history.push({ pathname: \"/\" });\n  history.listen(({ location }) => renderRoute(location));\n  renderRoute(history.location); // currentLocation = history.location\n}\n\nstartApp();\n\n/* \nNote1: check history.listen((res) => console.log(res));\n Nte2: to TEST\nconst comp = React.createElement(() => resolvedComp, {mode: \"CTO\"})\n<- ReactDOM renders the \"comp\" but without the prop ... ??\n*/\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React, { memo } from \"react\";\nimport \"../spinner.css\";\n\nconst Spinner = memo(() => {\n  return (\n    <svg\n      className=\"spinner\"\n      width=\"65px\"\n      height=\"65px\"\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        className=\"path\"\n        fill=\"none\"\n        strokeWidth=\"6\"\n        strokeLinecap=\"round\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n      ></circle>\n    </svg>\n  );\n});\nexport default Spinner;\n"],"sourceRoot":""}