{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","component/Contacts.jsx"],"names":["createSvgIcon","React","d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","LazyAlert","lazy","useStyles","makeStyles","paper","text","secondary","direction","padding","listItem","defaultBoxprops","bgcolor","borderColor","m","border","style","margin","Contacts","observer","store","useEffect","action","result","a","emails","Array","from","users","email","user","includes","addUser","handleClick","e","preventDefault","history","push","pathname","currentTarget","token","map","idx","spacing","xs","last_name","avatar","loading","href","onClick"],"mappings":"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","file":"static/js/17.d4f168aa.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { action } from \"mobx\";\nimport history from \"../utils/history\";\n\nimport {\n  List,\n  ListItem,\n  Box,\n  ListItemIcon,\n  Avatar,\n  Link,\n  // Collapse,\n} from \"@material-ui/core\";\n\n// import { Alert } from \"@material-ui/lab\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// import fetchUsers from \"../utils/fetchUsers\";\n\nconst LazyAlert = lazy(() => import(\"./ActionAlerts\"));\n\nconst useStyles = makeStyles((theme) => ({\n  /*alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },*/\n  root: {\n    width: \"100vw\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  paper: {\n    // padding: theme.spacing(5),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    direction: \"column\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"0px 0px 0px 15px\",\n  },\n  listItem: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst defaultBoxprops = {\n  bgcolor: \"background.paper\",\n  borderColor: \"text.primary\",\n  m: 1,\n  border: 1,\n  style: {\n    padding: \"1rem\",\n    height: \"3rem\",\n    backgroundColor: \"#424242\",\n    width: \"16rem\",\n  },\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  margin: \"10px\",\n};\n\n/*\nconst ActionAlerts = ({ token }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  return (\n    <div className={classes.root}>\n      <Collapse in={open}>\n        <Alert\n          onClose={() => {\n            setOpen(false);\n          }}\n        >\n          New user created! The token is {token}\n        </Alert>\n      </Collapse>\n    </div>\n  );\n};\n*/\nconst Contacts = observer(({ store }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    // fetchUsers().then(\n    action(async (result) => {\n      const emails = Array.from(store.users, ({ email }) => email);\n      for (const user of result) {\n        if (!emails.includes(user.email)) {\n          store.addUser(user);\n        }\n      }\n    });\n    // );\n  }, [store]);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    history.push({ pathname: e.currentTarget.pathname });\n  };\n\n  return (\n    <>\n      <div>\n        {store.token && (\n          <Suspense>\n            <LazyAlert token={store.token} />\n          </Suspense>\n        )}\n      </div>\n      <div className={classes.root}>\n        {store.users &&\n          store.users.map((user, idx) => (\n            <List key={user.email} spacing={2} className={classes.paper}>\n              <ListItemIcon xs={2} className={classes.listItem}>\n                <Avatar alt={user.last_name} src={user.avatar} loading=\"lazy\" />\n              </ListItemIcon>\n\n              <ListItem\n                xs={8}\n                className={classes.listItem}\n                style={{ width: \"16rem\" }}\n              >\n                <Box {...defaultBoxprops} borderRadius={16} border={2}>\n                  <Link\n                    href={`/contacts/${user.email}`}\n                    onClick={handleClick}\n                    style={{ color: \"#fff\" }}\n                  >\n                    {user.email}\n                  </Link>\n                </Box>\n              </ListItem>\n            </List>\n          ))}\n      </div>\n    </>\n  );\n});\n\nexport default Contacts;\n"],"sourceRoot":""}