{"version":3,"sources":["utils/history.js","utils/fetchUsers.js","component/router.jsx","img/404.jpg","component/Error.jsx","index.js","utils/store.jsx","component/Spinner.jsx"],"names":["history","createBrowserHistory","fetchUsers","a","requests","map","page","fetch","Promise","all","response","r","json","users","flatMap","u","data","spin","Spinner","LazyLayout","lazy","LazyHome","LazyAbout","LazySignInForm","LazyNewUsersForm","LazyUser","LazyContacts","UniversalRouter","path","action","next","component","fallback","store","children","then","res","addUsers","context","email","params","Error","src","img404","alt","style","height","width","loading","configure","enforceActions","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","disableErrorBoundaries","anchor","document","getElementById","renderRoute","location","undefined","pathname","router","resolve","resolveComponent","ReactDOM","render","console","log","listen","observable","open","setModalOpen","setModalClose","toggleModal","showForm","toggleForm","isSignedIn","toggleSgn","nb","inc","welcome","setMsg","addUser","push","emails","Array","from","newdata","filter","user","includes","length","getUserEmail","idx","getUserByEmail","result","forEach","current","setCurrent","rmCurrent","token","setToken","memo","className","viewBox","xmlns","fill","strokeWidth","strokeLinecap","cx","cy"],"mappings":"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","file":"static/js/main.05e91f90.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nexport default history;\n","export default async function fetchUsers() {\n  // const urlApi1 = \"https://jsonplaceholder.typicode.com/users\";\n  // const resp = await fetch(urlApi1);\n  // return await resp.json();\n\n  const urlApi2 = \"https://reqres.in/api/users\";\n  const requests = [1, 2].map((page) => fetch(`${urlApi2}?page=${page}`));\n  const response = await Promise.all(requests);\n  const users = await Promise.all(response.map((r) => r.json()));\n  return users.flatMap((u) => u.data);\n}\n","import React, { Suspense, lazy } from \"react\";\nimport UniversalRouter from \"universal-router\";\n// or cdn <=> window.UniversalRouter\n\nimport { action } from \"mobx\";\nimport fetchUsers from \"../utils/fetchUsers\";\nimport store from \"../utils/store\";\n\nimport Spinner from \"./Spinner\";\nconst spin = () => <Spinner />;\n\nconst LazyLayout = lazy(() => import(\"./Layout\"));\nconst LazyHome = lazy(() => import(\"./Home\"));\nconst LazyAbout = lazy(() => import(\"./About\"));\nconst LazySignInForm = lazy(() => import(\"./SignInForm\"));\nconst LazyNewUsersForm = lazy(() => import(\"./NewUsersForm\"));\nconst LazyUser = lazy(() => import(\"./User\"));\nconst LazyContacts = lazy(() => import(\"./Contacts\"));\n\nexport default new UniversalRouter([\n  {\n    path: \"\",\n    async action({ next }) {\n      const component = await next();\n      return (\n        component && (\n          <Suspense fallback={<Spinner />}>\n            <LazyLayout store={store}>{component}</LazyLayout>\n          </Suspense>\n        )\n      );\n    },\n    children: [\n      {\n        path: \"/\",\n        action: async () => {\n          /*\n          let home2 = await Promise.resolve(import(\"./Home2\"));\n          return home2({ store: store });\n          */\n          return (\n            <Suspense fallback={spin()}>\n              <LazyHome store={store} />;\n            </Suspense>\n          );\n        },\n      },\n      {\n        path: \"/about\",\n        async action() {\n          return (\n            <Suspense fallback={spin()}>\n              <LazyAbout store={store} />;\n            </Suspense>\n          );\n          //  <About store={store} />;\n        },\n      },\n      {\n        path: \"/signinform\",\n        async action() {\n          return (\n            <Suspense fallback={spin()}>\n              <LazySignInForm store={store} />;\n            </Suspense>\n          );\n          // <SignInForm store={store} />;\n        },\n      },\n      {\n        path: \"/addusers\",\n        async action() {\n          return (\n            <Suspense fallback={spin()}>\n              <LazyNewUsersForm store={store} />;\n            </Suspense>\n          );\n          // <NewUsersForm store={store} />;\n        },\n      },\n      {\n        path: \"/contacts\",\n        children: [\n          {\n            path: \"\",\n            // action from Universal Router\n            async action() {\n              fetchUsers().then(action((res) => store.addUsers(res))); //action from Mobx\n              return (\n                <Suspense fallback={spin()}>\n                  <LazyContacts store={store} />;\n                </Suspense>\n              );\n              //  <Contacts store={store} />;\n            },\n          },\n          {\n            path: \"/:email\",\n            async action(context) {\n              const email = context.params.email;\n              return (\n                <Suspense fallback={spin()}>\n                  <LazyUser email={email} store={store} />;\n                </Suspense>\n              );\n              //  <User email={email} store={store} />;\n            },\n          },\n        ],\n      },\n    ],\n  },\n]);\n","export default __webpack_public_path__ + \"static/media/404.8b1d91e2.jpg\";","import React, { lazy, Suspense } from \"react\";\n\nimport img404 from \"../img/404.jpg\";\nimport Spinner from \"./Spinner\";\nconst LazyLayout = lazy(() => import(\"./Layout\"));\n\nexport default function Error() {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <LazyLayout>\n        <img\n          src={img404}\n          alt=\"error 404\"\n          style={{ height: \"100vh\", width: \"100vw\" }}\n          loading=\"lazy\"\n        />\n      </LazyLayout>\n    </Suspense>\n  );\n}\n","import ReactDOM from \"react-dom\";\n\nimport history from \"./utils/history\";\nimport router from \"./component/router\";\nimport \"./App.css\";\n// import initFacebookSdk from \"./utils/initFacebookSdk\";\n\nimport { configure } from \"mobx\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nimport Error from \"./component/Error\";\n\nconfigure({\n  enforceActions: \"always\",\n  computedRequiresReaction: true,\n  reactionRequiresObservable: true,\n  observableRequiresReaction: true,\n  disableErrorBoundaries: true,\n});\n\nconst anchor = document.getElementById(\"root\");\n\nasync function renderRoute(location) {\n  try {\n    if (location === undefined) {\n      return (location.pathname = \"/\");\n    }\n    const resolveComponent = await router.resolve({\n      pathname: location.pathname,\n    });\n    return ReactDOM.render(resolveComponent, anchor);\n  } catch (err) {\n    console.log(\"Nothing there: \", location);\n    return ReactDOM.render(<Error />, anchor);\n  }\n}\n\n// initFacebookSdk().then(startApp);\n\nfunction startApp() {\n  history.listen(({ location }) => {\n    renderRoute(location);\n  });\n  const currentLocation = history.location;\n  renderRoute(currentLocation);\n  // reportWebVitals(console.log);\n}\n\nstartApp();\n","import { action, observable } from \"mobx\";\n\nconst store = observable({\n  // modal version\n  open: false,\n  setModalOpen: action(function setOpen() {\n    store.open = true;\n  }),\n  setModalClose: action(function setLodalClose() {\n    store.open = false;\n  }),\n  toggleModal: action(function toggleModal() {\n    return (store.open = !store.open);\n  }),\n  //\n  showForm: false,\n  toggleForm: action(function toggleForm() {\n    return (store.showForm = !store.showForm);\n  }),\n  //\n  isSignedIn: false,\n  toggleSgn: action(function toggleSgn() {\n    return (store.isSignedIn = !store.isSignedIn);\n  }),\n  get setSignedIn() {\n    return store.isSignedIn ? \"Sign out\" : \"Sign in\";\n  },\n  //\n  nb: 0,\n  inc: action(function inc() {\n    return store.nb++;\n  }),\n  //\n  welcome: \"Please sign in\",\n  get setWelcome() {\n    return store.isSignedIn ? \"Welcome back\" : \"Please sign in\";\n  },\n  setMsg: action(function setMsg() {\n    return (store.welcome = store.isSignedIn\n      ? \"Welcome back\"\n      : \"Please sign in\");\n  }),\n  //\n  users: [],\n  addUser: action(function addUser(data) {\n    store.users.push(data);\n  }),\n  addUsers: action((data) => {\n    const emails = Array.from(store.users, ({ email }) => email);\n    const newdata = data.filter((user) => !emails.includes(user.email));\n    return (store.users = [...store.users, ...newdata]); // concate 2 arrays -> 2 spread\n  }),\n  get nbUsers() {\n    return store.users.length;\n  },\n  getUserEmail: function (idx) {\n    if (store.users.length > 0) return store.users[idx].email;\n  },\n  getUserByEmail: function (email) {\n    let result;\n    store.users.forEach((user) => {\n      if (user.email === email) result = user;\n    });\n    return result;\n  },\n  //\n  current: {},\n  setCurrent: action((data) => {\n    store.current = data;\n  }),\n  rmCurrent: action(function rmUser(user) {\n    store.users = store.users.filter((u) => u.email !== user.email);\n    store.current = {};\n  }),\n  //\n  token: \"\",\n  setToken: action(function ({ token }) {\n    store.token = token;\n  }),\n});\n\nexport default store;\n","import React, { memo } from \"react\";\nimport \"../spinner.css\";\n\nconst Spinner = memo(() => {\n  return (\n    <svg\n      className=\"spinner\"\n      width=\"65px\"\n      height=\"65px\"\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        className=\"path\"\n        fill=\"none\"\n        strokeWidth=\"6\"\n        strokeLinecap=\"round\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n      ></circle>\n    </svg>\n  );\n});\nexport default Spinner;\n"],"sourceRoot":""}